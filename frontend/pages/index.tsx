import GameList from "@/components/GameList";
import { ApolloClient, InMemoryCache } from "@apollo/client";
import { NextPage } from "next";
import { withUserTokenSSR } from "next-firebase-auth";
import Head from "next/head";
import { GameDocument, GameQuery } from "../graphql/generated/graphql";

type Game = GameQuery["game"];

const Home: NextPage<{ games: Game[] }> = ({ games }) => {
  return (
    <div>
      <Head>
        <title>clip-games</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="mx-8 my-4">
        <GameList games={games} />
      </div>
    </div>
  );
};

export const getServerSideProps = withUserTokenSSR()(async ({ user }) => {
  const GAME_IDS: string[] = [
    "Z2lkOi8vYXBwbGljYXRpb24vR2FtZS8wQkR2OUZ3eFNCRkJ1akFUcHZkdw",
    "Z2lkOi8vYXBwbGljYXRpb24vR2FtZS8wTllsbmV0ejEzRkJPeWI1MDdyTw",
    "Z2lkOi8vYXBwbGljYXRpb24vR2FtZS8waGh2dGkycm40dE92OG14UVFxcQ",
  ];

  let token: string | null;
  if (user) token = await user.getIdToken(true);

  const client = new ApolloClient({
    uri: process.env.NEXT_PUBLIC_GRAPHQL_ENDPOINT_URL,
    cache: new InMemoryCache(),
  });

  const games: Game[] = await Promise.all(
    GAME_IDS.map(async (gameId) => {
      const { data } = await client.query({
        query: GameDocument,
        variables: { gameId },
      });
      return data.game;
    })
  );

  return {
    props: {
      games,
    },
  };
});

export default Home;
